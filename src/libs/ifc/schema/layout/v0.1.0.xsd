<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="layout">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="properties">
          <xs:complexType>
            <xs:sequence>
              <xs:element type="units" name="unit"/>
              <xs:element type="xs:string" name="title"/>    
              <xs:element type="xs:string" name="description"/>
              <xs:element name="control">
                <xs:complexType>
                  <xs:attribute type="xs:boolean" name="followGrainLine"/>
                  <xs:attribute type="xs:boolean" name="warningSuperposition"/>
                  <xs:attribute type="xs:boolean" name="warningOutOfBound"/>
                  <xs:attribute type="xs:boolean" name="stickyEdges"/>
                  <xs:attribute type="xs:float" name="piecesGap"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="tiles">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="size">
                      <xs:complexType>
                        <xs:attribute type="xs:float" name="width" use="required"/>
                        <xs:attribute type="xs:float" name="length" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="margin">
                      <xs:complexType>
                        <xs:attribute type="xs:float" name="top"/>
                        <xs:attribute type="xs:float" name="right"/>
                        <xs:attribute type="xs:float" name="bottom"/>
                        <xs:attribute type="xs:float" name="left"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute type="xs:boolean" name="visible"/>
                  <xs:attribute type="xs:string" name="matchingMarks"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="unplacedPieces">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="piece" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                  </xs:sequence>
                  <xs:attribute name="id" type="uuid"/>
                  <xs:attribute type="xs:string" name="name"/>
                  <xs:attribute type="xs:boolean" name="mirrored"/>
                  <xs:attribute type="xs:boolean" name="showSeamline"/>
                  <xs:attribute type="xs:string" name="transform"/>  
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute type="xs:string" name="name"/>
            <xs:attribute type="xs:boolean" name="visible"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="sheets">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="sheet" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element type="xs:string" name="name"/>
                    <xs:element name="size">
                      <xs:complexType>
                        <xs:attribute type="xs:float" name="width" use="required"/>
                        <xs:attribute type="xs:float" name="length" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="margin">
                      <xs:complexType>
                        <xs:attribute type="xs:float" name="top"/>
                        <xs:attribute type="xs:float" name="right"/>
                        <xs:attribute type="xs:float" name="bottom"/>
                        <xs:attribute type="xs:float" name="left"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="pieces">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="piece" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                              </xs:sequence>
                              <xs:attribute name="id" type="uuid"/>
                              <xs:attribute type="xs:string" name="name"/>
                              <xs:attribute type="xs:boolean" name="mirrored"/>
                              <xs:attribute type="xs:boolean" name="showSeamline"/>
                              <xs:attribute type="xs:string" name="transform"/>  
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute type="xs:string" name="name"/>
                        <xs:attribute type="xs:boolean" name="visible"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute type="formatVersion" name="version" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="formatVersion">
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="units">
    <xs:restriction base="xs:string">
      <xs:enumeration value="mm"/>
      <xs:enumeration value="cm"/>
      <xs:enumeration value="inch"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="uuid">
    <xs:restriction base="xs:string">
      <xs:pattern value="|\{[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}\}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
